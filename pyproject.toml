[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "qbit-torrent-extract"
version = "0.1.0"
description = "Automated nested archive extraction for qBittorrent downloads - solves the 'No files found' problem for *arr apps"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: System Administrators",
    "Topic :: System :: Archiving",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Natural Language :: English",
]
keywords = [
    "qbittorrent",
    "archive",
    "extraction",
    "zip",
    "rar",
    "7z",
    "automation",
    "torrent",
    "readarr",
    "sonarr",
    "radarr",
    "lidarr",
    "*arr",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "tqdm>=4.60.0",
    "rarfile>=4.0",
    "py7zr>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/qbit-torrent-extract"
Documentation = "https://github.com/yourusername/qbit-torrent-extract/tree/main/docs"
Repository = "https://github.com/yourusername/qbit-torrent-extract.git"
"Bug Tracker" = "https://github.com/yourusername/qbit-torrent-extract/issues"
Changelog = "https://github.com/yourusername/qbit-torrent-extract/blob/main/CHANGELOG.md"

[project.scripts]
qbit-torrent-extract = "qbit_torrent_extract.main:main"
qte = "qbit_torrent_extract.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "types-tqdm>=4.65.0",
    "psutil>=5.9.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-click>=4.4.0",
]
all = [
    "qbit-torrent-extract[dev,docs]",
]

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["qbit_torrent_extract*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
qbit_torrent_extract = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--tb=short",
]
markers = [
    "performance: marks tests as performance tests (deselect with '-m \"not performance\"')",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]